{"version":3,"sources":["components/Navbar.js","components/CopyAlert.js","components/textForm.js","App.js","index.js"],"names":["Header","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","CopyAlert","style","height","alert","role","xmlns","width","fill","viewBox","d","TextForm","color","useState","searchInput","newInputValue","heading","rows","border","fontSize","onChange","event","target","value","disabled","length","toUpperCase","toLowerCase","newText","split","join","document","getElementById","select","execCommand","getSelection","removeAllRanges","copyAlert","filter","a","defaultProps","about","App","setMode","body","backgroundColor","setcopyAlert","setTimeout","ReactDOM","render"],"mappings":"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","file":"static/js/main.4e233d41.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n                    </li>\r\n                </ul>\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                    <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} mode</label>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes={\r\n    //by specifying its type, we will get a warning in the console if we input a value of mismatching data type. and by using\r\n    // isRequired, we will get a warning if we dont give any value for the prop. But since we have already specified default\r\n    // props, isRequired will never give us warning because a default value will be used incase we dont input a prop value\r\n    title: PropTypes.string.isRequired, \r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nHeader.defaultProps={\r\n    title: \"Navbar\",\r\n    about: \"About Us\" //since we didn't give the value of about prop, so this default value for about prop will be used\r\n}","import React from 'react'\r\n\r\nexport default function CopyAlert(props) {\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div className=\"alert alert-success d-flex align-items-center\" role=\"alert\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi flex-shrink-0 me-2\" viewBox=\"0 0 16 16\" role=\"img\" aria-label=\"Warning:\">\r\n                <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n            </svg>\r\n            <div>\r\n                Copied To Clipboard\r\n            </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    let style = props.mode==='light' ? {\r\n        color:'black',\r\n        // backgroundColor:'white'\r\n    }:{\r\n        color:'white',\r\n        // backgroundColor:'#111111'\r\n    };\r\n\r\n    const [searchInput, newInputValue] = useState(\"\")\r\n\r\n    function Uppercase(){\r\n        newInputValue(searchInput.toUpperCase())\r\n    }\r\n\r\n    function Lowercase(){\r\n        newInputValue(searchInput.toLowerCase())\r\n    }\r\n\r\n    function copyText(){\r\n        //this wont work on mobile devices if site is not https(secured)\r\n        // navigator.clipboard.writeText(searchInput)\r\n\r\n        //this will work on all devices\r\n        var copyText = document.getElementById(\"myBox\")\r\n        copyText.select()\r\n        document.execCommand(\"copy\") //this command is not async thats why this method is depriciated(will still work but not recommended)\r\n        document.getSelection().removeAllRanges()\r\n\r\n        props.copyAlert()\r\n    }\r\n\r\n    function removeSpaces(){\r\n        let newText=searchInput.split(/[ ]+/)\r\n        newInputValue(newText.join(\" \"))\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <div className=\"my-3\">\r\n            <label htmlFor=\"byBox\" className=\"form-label\"><h1>{props.heading}</h1></label>\r\n            <textarea className=\"form-control\" id=\"myBox\" rows=\"10\" style={{border:\"3px solid black\",fontSize:\"1.2rem\"}} onChange={(event)=>{newInputValue(event.target.value)}} value={searchInput}></textarea>\r\n            </div>\r\n            <button type=\"button\" disabled={searchInput.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={()=>{Uppercase()}}>Uppercase</button>\r\n            <button type=\"button\" disabled={searchInput.length===0} className=\"btn btn-secondary mx-1 my-1\" onClick={Lowercase}>Lowercase</button>\r\n            <button type=\"button\" disabled={searchInput.length===0} className=\"btn btn-success mx-1 my-1\" onClick={removeSpaces}>Remove Extra Spaces</button>\r\n            <button type=\"button\" disabled={searchInput.length===0} className=\"btn btn-danger mx-1 my-1\" onClick={copyText}>Copy Text</button>\r\n            <button type=\"button\" disabled={searchInput.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={()=>{newInputValue(\"\")}}>Clear Text</button>\r\n            {/* <button type=\"button\" className=\"btn btn-info mx-1\">Info</button> */}\r\n\r\n            <div className=\"my-3\">\r\n                <h2>Text Description</h2>\r\n                <p>{searchInput.split(/\\s+/).filter((a)=>{return a.length!==0}).length} Words and {searchInput.length} Characters</p>\r\n                <p>{0.008*(searchInput.split(\" \").filter((a)=>{return a.length!==0}).length)} Minute Read</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import Navbar from \"./components/Navbar\";\nimport CopyAlert from \"./components/CopyAlert\";\n// import About from \"./components/About\"\nimport Form from \"./components/textForm\"\nimport React,{useState} from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  let toggleMode= ()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#111111'\n    }\n    else if(mode==='dark'){\n      setMode('light')\n      document.body.style.backgroundColor='#f1d9d1'\n    }\n  }\n\n  const [copyAlert, setcopyAlert] = useState(false);\n  const showAlert= ()=>{\n    setcopyAlert(true);\n    setTimeout(()=>{\n      setcopyAlert(false)\n    },1500)\n  }\n\n  return (\n    <div>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <CopyAlert alert={copyAlert}/>\n      <div className=\"container\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About mode={mode}/> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <Form heading=\"Enter text to analyse\" mode={mode} toggleMode={toggleMode} copyAlert={showAlert}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n    {/* </Router> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\n\n"],"sourceRoot":""}